{"version":3,"sources":["components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Container/Container.styles.jsx","components/Container/Container.jsx","services/contactsApi.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/PhoneBookForm/PhoneBookForm.styles.jsx","components/PhoneBookForm/PhoneBookForm.jsx","components/PhoneBookListItem/PhoneBookListItem.styles.jsx","components/PhoneBookListItem/PhoneBookListItem.jsx","components/PhoneBookList/PhoneBookList.styles.jsx","components/PhoneBookList/PhoneBooklist.jsx","redux/contacts/contactsSlice.js","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","components/Loader/Loader.styles.jsx","components/Loader/Loader.jsx","App.jsx","redux/store.js","index.js"],"names":["Wrapper","styled","section","Title","h2","Section","title","children","Main","div","ContainerContacts","ContainerAdd","Container","axios","defaults","baseURL","ContactsAPI","get","data","contact","post","id","delete","fetchContacts","createAsyncThunk","_","a","rejectWithValue","contacts","message","addContact","deleteContact","getFilter","state","filter","getIsLoading","isLoading","getContacts","items","getVisibleContacts","createSelector","name","toLowerCase","includes","number","Form","form","Label","label","Input","input","Button","button","ContainerForm","PhoneBookForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","contactsSelectors","nameInputId","shortid","telInputId","handleSetUserInfo","e","currentTarget","value","onSubmit","preventDefault","includedName","find","includedNumber","replace","Swal","fire","position","icon","toUpperCase","confirmButtonColor","checkContact","contactsOperations","action","onChange","type","pattern","placeholder","autoComplete","maxLength","required","htmlFor","size","Item","li","propTypes","onClick","PropTypes","func","isRequired","PhoneBookListItem","List","ul","PhoneBookList","map","contactsSlice","createSlice","initialState","error","reducers","changeFilter","payload","extraReducers","builder","addCase","fulfilled","push","addMatcher","isAnyOf","pending","rejected","console","actions","FilterContainer","Filter","filterInputId","target","LoaderWrapper","Loader","loading","color","App","useEffect","length","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2lBAEaA,EAAUC,IAAOC,QAAV,gDAGPC,EAAQF,IAAOG,GAAV,uN,OCiBHC,EAlBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACP,EAAD,WACGM,GACC,eAACH,EAAD,WACE,cAAC,IAAD,IACCG,KAGJC,MCXMC,EAAOP,IAAOQ,IAAV,qgBAyBJC,EAAoBT,IAAOQ,IAAV,6CAGjBE,EAAeV,IAAOQ,IAAV,6CCpBVG,EAPG,SAAC,GAAkB,IAAhBL,EAAe,EAAfA,SACnB,OAAO,cAACC,EAAD,UAAOD,K,0FCFhBM,IAAMC,SAASC,QAAU,8CAElB,I,cAAMC,EAAb,yIACI,sGAC2BH,IAAMI,IAAI,aADrC,uBACYC,EADZ,EACYA,KADZ,kBAGWA,GAHX,2CADJ,qHAOI,WAAwBC,GAAxB,yFAC2BN,IAAMO,KAAK,YAAaD,GADnD,uBACYD,EADZ,EACYA,KADZ,kBAGWA,GAHX,2CAPJ,yHAaI,WAA2BG,GAA3B,iFACUR,IAAMS,OAAN,oBAA0BD,IADpC,2CAbJ,8DCDaE,EAAgBC,YACzB,uBADyC,uCAEzC,WAAOC,EAAP,oBAAAC,EAAA,6DAAYC,EAAZ,EAAYA,gBAAZ,kBAE+BX,EAAYO,gBAF3C,cAEcK,EAFd,yBAIeA,GAJf,yDAMeD,EAAgB,KAAME,UANrC,yDAFyC,yDAahCC,EAAaN,YACtB,sBADsC,uCAEtC,WAAOL,EAAP,oBAAAO,EAAA,6DAAkBC,EAAlB,EAAkBA,gBAAlB,kBAE2BX,EAAYc,WAAWX,GAFlD,cAEcD,EAFd,yBAIeA,GAJf,yDAMeS,EAAgB,KAAME,UANrC,yDAFsC,yDAa7BE,EAAgBP,YACzB,yBADyC,uCAEzC,WAAOH,EAAP,kBAAAK,EAAA,6DAAaC,EAAb,EAAaA,gBAAb,kBAEcX,EAAYe,cAAcV,GAFxC,gCAIeA,GAJf,yDAMeM,EAAgB,KAAME,UANrC,yDAFyC,yD,QC5BhCG,EAAY,SAAAC,GAAK,OAAIA,EAAML,SAASM,QACpCC,EAAe,SAAAF,GAAK,OAAIA,EAAML,SAASQ,WACvCC,EAAc,SAAAJ,GAAK,OAAIA,EAAML,SAASU,OAEtCC,EAAqBC,YAAe,CAACH,EAAaL,IAAY,SAACJ,EAAUM,GAClF,OAAON,EAASM,QACZ,SAAAf,GAAO,OACHA,EAAQsB,KAAKC,cAAcC,SAAST,EAAOQ,gBAC3CvB,EAAQyB,OAAOD,SAAST,S,kBCPvBW,GAAO5C,IAAO6C,KAAV,oDAIJC,GAAQ9C,IAAO+C,MAAV,sZAqBLC,GAAQhD,IAAOiD,MAAV,wtBAuCLC,GAASlD,IAAOmD,OAAV,kgBAsBNC,GAAgBpD,IAAOQ,IAAV,4FCmCX6C,GAnHO,WAClB,MAAwBC,mBAAS,IAAjC,mBAAOd,EAAP,KAAae,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOX,EAAP,KAAea,EAAf,KACMC,EAAWC,cACX/B,EAAWgC,YAAYC,EAAkBxB,aAEzCyB,EAAcC,OACdC,EAAaD,OAiCbE,EAAoB,SAAAC,GACtB,MAAwBA,EAAEC,cAAlB1B,EAAR,EAAQA,KAAM2B,EAAd,EAAcA,MAEd,OAAQ3B,GACJ,IAAK,OACDe,EAAQY,GACR,MAEJ,IAAK,SACDX,EAAUW,GACV,MAEJ,QACI,SAeZ,OACI,eAACvB,GAAD,CAAMwB,SAZW,SAAAH,GACjBA,EAAEI,iBAjDe,SAAC1C,EAAUa,EAAMG,GAClC,IAAM2B,EAAe3C,EAAS4C,MAC1B,SAAArD,GAAO,OAAIA,EAAQsB,KAAKC,gBAAkBD,EAAKC,iBAG7C+B,EAAiB7C,EAAS4C,MAC5B,SAAArD,GAAO,OAAIA,EAAQyB,OAAO8B,QAAQ,UAAW,MAAQ9B,EAAO8B,QAAQ,UAAW,OAGnF,OAAIH,GACAI,IAAKC,KAAK,CACNC,SAAU,SACVC,KAAM,QACNxE,MAAM,GAAD,OAAKmC,EAAKsC,cAAV,6BACLC,mBAAoB,cAGjBT,GAGPE,GACAE,IAAKC,KAAK,CACNC,SAAU,SACVC,KAAM,QACNxE,MAAM,0CAAD,OAA4CmE,EAAehC,KAAKsC,eACrEC,mBAAoB,cAEjBP,QAPX,EA8BuBQ,CAAarD,EAAUa,EAAMG,KAIpDc,EAASwB,EAAmBpD,WAAW,CAAEW,OAAMG,YAC/CY,EAAQ,IACRC,EAAU,MAIoB0B,OAAO,GAArC,UACI,eAAC9B,GAAD,WACI,cAACJ,GAAD,CACImC,SAAUnB,EACV5C,GAAIyC,EACJuB,KAAK,OACL5C,KAAK,OACL2B,MAAO3B,EACP6C,QAAQ,yHACRhF,MAAM,kcACNiF,YAAY,OACZC,aAAa,MACbC,UAAU,KACVC,UAAQ,IAEZ,eAAC3C,GAAD,CAAO4C,QAAS7B,EAAhB,UACI,cAAC,IAAD,CAAY8B,KAAK,OADrB,aAKJ,eAACvC,GAAD,WACI,cAACJ,GAAD,CACImC,SAAUnB,EACV5C,GAAI2C,EACJqB,KAAK,MACL5C,KAAK,SACL2B,MAAOxB,EACP0C,QAAQ,yFACRhF,MAAM,giBACNiF,YAAY,YACZC,aAAa,MACbC,UAAU,KACVC,UAAQ,IAEZ,eAAC3C,GAAD,CAAO4C,QAAS3B,EAAhB,UACI,cAAC,IAAD,CAAa4B,KAAK,OADtB,eAKJ,eAACzC,GAAD,CAAQkC,KAAK,SAAb,UACI,cAAC,IAAD,IADJ,qB,oBClHCQ,GAAO5F,IAAO6F,GAAV,idA0BJ3C,GAASlD,IAAOmD,OAAV,4UCLnBD,GAAO4C,UAAY,CACfC,QAASC,KAAUC,KAAKC,YAGbC,I,YAAAA,GAvBW,SAAC,GAA+B,IAA7B3D,EAA4B,EAA5BA,KAAMG,EAAsB,EAAtBA,OAAQoD,EAAc,EAAdA,QACvC,OACI,eAACH,GAAD,WACI,iCACI,cAAC,IAAD,CAAiBD,KAAK,OACrBnD,EAFL,OAIA,+BAAOG,IACP,cAAC,GAAD,CAAQoD,QAASA,EAAjB,wBCVCK,GAAOpG,IAAOqG,GAAV,0ECuBFC,GApBO,WAClB,IAAM3E,EAAWgC,YAAYC,EAAkBtB,oBACzCmB,EAAWC,cACjB,OACI,cAAC0C,GAAD,UACKzE,EAAS4E,KAAI,YAA2B,IAAxB/D,EAAuB,EAAvBA,KAAMG,EAAiB,EAAjBA,OAAQvB,EAAS,EAATA,GAC3B,OACI,cAAC,GAAD,CAEIoB,KAAMA,EACNG,OAAQA,EACRvB,GAAIA,EACJ2E,QAAS,kBAAMtC,EAASwB,EAAmBnD,cAAcV,MAJpDA,SCVvBoF,GAAgBC,YAAY,CAC9BjE,KAAM,WACNkE,aAAc,CACVrE,MAAO,GACPJ,OAAQ,GACRE,WAAW,EACXwE,MAAO,MAEXC,SAAU,CACNC,aAAc,SAAC7E,EAAOkD,GAClBlD,EAAMC,OAASiD,EAAO4B,UAI9BC,cAAe,SAAAC,GACXA,EACKC,QAAQ3F,EAAc4F,WAAW,SAAClF,EAAOkD,GACtClD,EAAMK,MAAQ6C,EAAO4B,WAExBG,QAAQpF,EAAWqF,WAAW,SAAClF,EAAOkD,GACnClD,EAAMK,MAAM8E,KAAKjC,EAAO4B,YAE3BG,QAAQnF,EAAcoF,WAAW,SAAClF,EAAOkD,GACtClD,EAAMK,MAAQL,EAAMK,MAAMJ,QAAO,qBAAGb,KAAgB8D,EAAO4B,cAE9DM,WACGC,YAAQ/F,EAAcgG,QAASzF,EAAWyF,QAASxF,EAAcwF,UACjE,SAAAtF,GACIA,EAAMG,WAAY,EAClBH,EAAM2E,MAAQ,QAGrBS,WACGC,YACI/F,EAAc4F,UACdrF,EAAWqF,UACXpF,EAAcoF,UACd5F,EAAciG,SACd1F,EAAW0F,SACXzF,EAAcyF,WAElB,SAAAvF,GACIA,EAAMG,WAAY,KAGzBiF,WACGC,YAAQ/F,EAAciG,SAAU1F,EAAW0F,SAAUzF,EAAcyF,WACnE,SAACvF,EAAOkD,GACJlD,EAAM2E,MAAQzB,EAAO4B,QAErBU,QAAQb,MAAMzB,EAAO4B,eAM1BD,GAAiBL,GAAciB,QAA/BZ,aACAL,MAAf,QC1Da1D,GAAQ9C,IAAO+C,MAAV,qYAkBLC,GAAQhD,IAAOiD,MAAV,2wBAqCLyE,GAAkB1H,IAAOQ,IAAV,8FCzBbmH,GAzBA,WACX,IAAMC,EAAgB9D,OAChBK,EAAQR,YAAYC,EAAkB7B,WACtC0B,EAAWC,cAEjB,OACI,mCACI,eAACgE,GAAD,WACI,cAAC,GAAD,CACItG,GAAIwG,EACJpF,KAAK,SACL2C,SAAU,SAAAlB,GAAC,OAAIR,EAASoD,GAAa5C,EAAE4D,OAAO1D,SAC9CiB,KAAK,OACLjB,MAAOA,EACPmB,YAAY,SAEhB,eAAC,GAAD,CAAOI,QAASkC,EAAhB,UACI,cAAC,IAAD,CAAejC,KAAK,OADxB,gC,6BCrBT,IAAMmC,GAAa,mMCCbC,GAAS,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACI,cAACF,GAAD,UACI,cAAC,KAAD,CAAYE,QAASA,EAASC,MAAO,UAAWtC,KAAM,SCyCnDuC,GAnCH,WACR,IAAMvG,EAAWgC,YAAYC,EAAkBxB,aACzCD,EAAYwB,YAAYC,EAAkB1B,cAC1CuB,EAAWC,cAMjB,OAJAyE,qBAAU,WACN1E,EAASwB,EAAmB3D,mBAC7B,CAACmC,IAGA,qCACI,cAAC,EAAD,CAASpD,MAAM,aAAf,SACI,eAAC,EAAD,WACI,eAACK,EAAD,WACI,+BACI,cAAC,IAAD,IADJ,kBAGA,cAAC,GAAD,OAGJ,eAACD,EAAD,WACI,+BACI,cAAC,IAAD,IADJ,cAIA,cAAC,GAAD,IACCkB,EAASyG,OAAS,GAAK,cAAC,GAAD,YAIpC,cAAC,GAAD,CAAQJ,QAAS7F,QChCdkG,GAPDC,YAAe,CACzBC,QAAS,CACL5G,SAAU6G,IAEdC,UAAUC,ICAdC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRS,SAASC,eAAe,W","file":"static/js/main.76186e14.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.section`\n  padding: 40px 0;\n`;\nexport const Title = styled.h2`\n  margin: 0 auto 50px;\n  text-transform: capitalize;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 50px;\n  text-align: center;\n  color: #727273;\n`;\n","import PropTypes from \"prop-types\";\nimport { Wrapper, Title } from \"./Section.styles\";\nimport { RiBook2Line } from \"react-icons/ri\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      {title && (\n        <Title>\n          <RiBook2Line />\n          {title}\n        </Title>\n      )}\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\nexport default Section;\n","import styled from \"@emotion/styled\";\n\nexport const Main = styled.div`\n  width: 900px;\n  display: flex;\n  justify-content: space-between;\n  margin: 0 auto;\n  padding: 30px;\n  border-radius: 20px;\n  box-shadow: -10px -10px 30px 0 #ffffff, 10px 10px 30px 0 #aeaec040;\n  background-color: #f0f0f3;\n  & h1,\n  h2 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #727273;\n    font-size: 28px;\n    margin-bottom: 50px;\n    margin-top: 0;\n    & svg {\n      margin-right: 15px;\n      color: #727273;\n    }\n  }\n`;\n\nexport const ContainerContacts = styled.div`\n  width: 450px;\n`;\nexport const ContainerAdd = styled.div`\n  width: 450px;\n`;\n","import PropTypes from \"prop-types\";\nimport { Main } from \"./Container.styles\";\n\nconst Container = ({ children }) => {\n  return <Main>{children}</Main>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Container;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://61156ec88f38520017a384ea.mockapi.io';\n\nexport class ContactsAPI {\n    static async fetchContacts() {\n        const { data } = await axios.get('/contacts');\n\n        return data;\n    }\n\n    static async addContact(contact) {\n        const { data } = await axios.post('/contacts', contact);\n\n        return data;\n    }\n\n    static async deleteContact(id) {\n        await axios.delete(`/contacts/${id}`);\n    }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { ContactsAPI } from '../../services/contactsApi';\n\nexport const fetchContacts = createAsyncThunk(\n    'contacts/getContacts',\n    async (_, { rejectWithValue }) => {\n        try {\n            const contacts = await ContactsAPI.fetchContacts();\n\n            return contacts;\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    },\n);\n\nexport const addContact = createAsyncThunk(\n    'contacts/addContact',\n    async (contact, { rejectWithValue }) => {\n        try {\n            const data = await ContactsAPI.addContact(contact);\n\n            return data;\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    },\n);\n\nexport const deleteContact = createAsyncThunk(\n    'contacts/deleteContact',\n    async (id, { rejectWithValue }) => {\n        try {\n            await ContactsAPI.deleteContact(id);\n\n            return id;\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    },\n);\n","import { createSelector } from '@reduxjs/toolkit';\nexport const getFilter = state => state.contacts.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getContacts = state => state.contacts.items;\n\nexport const getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\n    return contacts.filter(\n        contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n            contact.number.includes(filter),\n    );\n});\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  margin: 0 auto 50px;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  left: 0;\n  bottom: 5px;\n  margin-bottom: 10px;\n  cursor: text;\n  font-size: 20px;\n  color: var(--grey);\n\n  transition: color 250ms ease, transform 250ms ease;\n\n  & svg {\n    margin-right: 10px;\n    font-weight: 500;\n    transition: color 250ms ease, transform 250ms ease;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 50px;\n  padding-left: 30px;\n  border: none;\n  border-bottom: 1px solid var(--dark);\n  font-size: 20px;\n  color: var(--dark);\n  background-color: transparent;\n\n  &::placeholder {\n    opacity: 0;\n    color: var(--dark);\n    font-weight: 700;\n    transition: opacity 250ms ease;\n  }\n\n  &:focus {\n    outline: none;\n    border-color: var(--dark);\n    &::placeholder {\n      opacity: 0.7;\n      font-weight: 700;\n      transition-delay: 250ms;\n    }\n  }\n\n  &:focus + label,\n  &:not(:placeholder-shown) + label {\n    font-size: 0;\n    color: var(--dark);\n    & svg {\n      font-weight: 700;\n      color: var(--dark);\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 5px 10px;\n  cursor: pointer;\n  border: 1px solid #f0f0f3;\n  box-shadow: -10px -10px 30px 0 #ffffff, 10px 10px 30px 0 #aeaec040;\n  border-radius: 20px;\n  font-size: 20px;\n  text-transform: uppercase;\n  color: var(--dark);\n  background-color: transparent;\n  transition: all 250ms ease-in-out;\n  &:hover {\n    transform: scale(1.2);\n  }\n  & svg {\n    margin-right: 10px;\n  }\n`;\nexport const ContainerForm = styled.div`\n  position: relative;\n  width: 400px;\n  margin-bottom: 50px;\n`;\n","import Swal from 'sweetalert2';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport shortid from 'shortid';\nimport { Form, Label, Input, Button, ContainerForm } from './PhoneBookForm.styles';\nimport { RiUserLine, RiPhoneLine, RiUserAddLine } from 'react-icons/ri';\n\nconst PhoneBookForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n    const contacts = useSelector(contactsSelectors.getContacts);\n\n    const nameInputId = shortid();\n    const telInputId = shortid();\n\n    const checkContact = (contacts, name, number) => {\n        const includedName = contacts.find(\n            contact => contact.name.toLowerCase() === name.toLowerCase(),\n        );\n\n        const includedNumber = contacts.find(\n            contact => contact.number.replace(/[^0-9]/g, '') === number.replace(/[^0-9]/g, ''),\n        );\n\n        if (includedName) {\n            Swal.fire({\n                position: 'center',\n                icon: 'error',\n                title: `${name.toUpperCase()}\\nis already in contacts!`,\n                confirmButtonColor: 'indianred',\n            });\n\n            return includedName;\n        }\n\n        if (includedNumber) {\n            Swal.fire({\n                position: 'center',\n                icon: 'error',\n                title: `This number is already in contacts as\\n${includedNumber.name.toUpperCase()}`,\n                confirmButtonColor: 'indianred',\n            });\n            return includedNumber;\n        }\n    };\n\n    const handleSetUserInfo = e => {\n        const { name, value } = e.currentTarget;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n\n            case 'number':\n                setNumber(value);\n                break;\n\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const existedContact = checkContact(contacts, name, number);\n\n        if (existedContact) return;\n\n        dispatch(contactsOperations.addContact({ name, number }));\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <Form onSubmit={handleSubmit} action=\"\">\n            <ContainerForm>\n                <Input\n                    onChange={handleSetUserInfo}\n                    id={nameInputId}\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    placeholder=\"Name\"\n                    autoComplete=\"off\"\n                    maxLength=\"40\"\n                    required\n                />\n                <Label htmlFor={nameInputId}>\n                    <RiUserLine size=\"25\" />\n                    Name\n                </Label>\n            </ContainerForm>\n            <ContainerForm>\n                <Input\n                    onChange={handleSetUserInfo}\n                    id={telInputId}\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    placeholder=\"111-11-11\"\n                    autoComplete=\"off\"\n                    maxLength=\"15\"\n                    required\n                />\n                <Label htmlFor={telInputId}>\n                    <RiPhoneLine size=\"25\" />\n                    Number\n                </Label>\n            </ContainerForm>\n            <Button type=\"submit\">\n                <RiUserAddLine />\n                Add contact\n            </Button>\n        </Form>\n    );\n};\nexport default PhoneBookForm;\n","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  width: 440px;\n  font-size: 20px;\n  margin: 0 auto;\n  padding: 10px 5px;\n  & span {\n    display: inline-flex;\n    align-items: center;\n    font-weight: 600;\n    color: var(--grey);\n    &:first-of-type {\n      color: var(--dark);\n      margin-right: 10px;\n    }\n    & svg {\n      margin-right: 15px;\n      color: var(--dark);\n    }\n  }\n  & svg {\n    color: var(--dark);\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: 10px;\n  font-size: 16px;\n  padding: 5px;\n  color: var(--dark);\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  background-color: transparent;\n  transition: all 250ms ease;\n  &:hover {\n    border: 1px solid var(--dark);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Button } from './PhoneBookListItem.styles';\nimport { RiUserHeartFill } from 'react-icons/ri';\n\nconst PhoneBookListItem = ({ name, number, onClick }) => {\n    return (\n        <Item>\n            <span>\n                <RiUserHeartFill size=\"20\" />\n                {name}:\n            </span>\n            <span>{number}</span>\n            <Button onClick={onClick}>delete</Button>\n        </Item>\n    );\n};\n\nPhoneBookListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default PhoneBookListItem;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  border-radius: 4px;\n  overflow: hidden;\n`;\n","import PhoneBookListItem from '../PhoneBookListItem/PhoneBookListItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport { List } from './PhoneBookList.styles';\n\nconst PhoneBookList = () => {\n    const contacts = useSelector(contactsSelectors.getVisibleContacts);\n    const dispatch = useDispatch();\n    return (\n        <List>\n            {contacts.map(({ name, number, id }) => {\n                return (\n                    <PhoneBookListItem\n                        key={id}\n                        name={name}\n                        number={number}\n                        id={id}\n                        onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                    />\n                );\n            })}\n        </List>\n    );\n};\n\nexport default PhoneBookList;\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport { fetchContacts, addContact, deleteContact } from './contactsOperations';\n\nconst contactsSlice = createSlice({\n    name: 'contacts',\n    initialState: {\n        items: [],\n        filter: '',\n        isLoading: false,\n        error: null,\n    },\n    reducers: {\n        changeFilter: (state, action) => {\n            state.filter = action.payload;\n        },\n    },\n\n    extraReducers: builder => {\n        builder\n            .addCase(fetchContacts.fulfilled, (state, action) => {\n                state.items = action.payload;\n            })\n            .addCase(addContact.fulfilled, (state, action) => {\n                state.items.push(action.payload);\n            })\n            .addCase(deleteContact.fulfilled, (state, action) => {\n                state.items = state.items.filter(({ id }) => id !== action.payload);\n            })\n            .addMatcher(\n                isAnyOf(fetchContacts.pending, addContact.pending, deleteContact.pending),\n                state => {\n                    state.isLoading = true;\n                    state.error = null;\n                },\n            )\n            .addMatcher(\n                isAnyOf(\n                    fetchContacts.fulfilled,\n                    addContact.fulfilled,\n                    deleteContact.fulfilled,\n                    fetchContacts.rejected,\n                    addContact.rejected,\n                    deleteContact.rejected,\n                ),\n                state => {\n                    state.isLoading = false;\n                },\n            )\n            .addMatcher(\n                isAnyOf(fetchContacts.rejected, addContact.rejected, deleteContact.rejected),\n                (state, action) => {\n                    state.error = action.payload;\n\n                    console.error(action.payload);\n                },\n            );\n    },\n});\n\nexport const { changeFilter } = contactsSlice.actions;\nexport default contactsSlice.reducer;\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  position: absolute;\n  left: 0;\n  bottom: 5px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n  cursor: text;\n  font-size: 20px;\n  color: var(--grey);\n\n  transition: color 250ms ease-in-out, transform 250ms ease-in-out;\n  & svg {\n    margin-right: 10px;\n    transition: color 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 50px;\n  margin-bottom: 30px;\n  padding-left: 40px;\n  border: none;\n  border-bottom: 1px solid var(--dark);\n  font-size: 20px;\n  color: var(--dark);\n  background-color: transparent;\n  transition: all 250ms ease-in-out;\n  &::placeholder {\n    opacity: 0;\n    color: var(--dark);\n    transition: opacity 250ms ease;\n  }\n  &:focus {\n    outline: none;\n    border-bottom: 1px solid var(--dark);\n    &::placeholder {\n      opacity: 0.7;\n      transition-delay: 250ms;\n    }\n  }\n  &:focus + label,\n  &:not(:placeholder-shown) + label {\n    font-size: 0;\n    text-transform: uppercase;\n    font-weight: 600;\n    color: var(--dark);\n    & svg {\n      color: var(--dark);\n    }\n  }\n`;\n\nexport const FilterContainer = styled.div`\n  position: relative;\n  width: 400px;\n  margin-bottom: 25px;\n`;\n","import shortid from 'shortid';\nimport { RiFilter2Line } from 'react-icons/ri';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contactsSlice';\nimport { contactsSelectors } from '../../redux/contacts';\nimport { FilterContainer, Label, Input } from './Filter.styles';\n\nconst Filter = () => {\n    const filterInputId = shortid();\n    const value = useSelector(contactsSelectors.getFilter);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <FilterContainer>\n                <Input\n                    id={filterInputId}\n                    name=\"filter\"\n                    onChange={e => dispatch(changeFilter(e.target.value))}\n                    type=\"text\"\n                    value={value}\n                    placeholder=\"Name\"\n                />\n                <Label htmlFor={filterInputId}>\n                    <RiFilter2Line size=\"30\" />\n                    Find contact by name\n                </Label>\n            </FilterContainer>\n        </>\n    );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled/macro';\n\nexport const LoaderWrapper = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    pointer-events: none;\n`;\n","import PuffLoader from 'react-spinners/PuffLoader';\nimport { LoaderWrapper } from './Loader.styles';\n\nexport const Loader = ({ loading }) => {\n    return (\n        <LoaderWrapper>\n            <PuffLoader loading={loading} color={'#727273'} size={400} />\n        </LoaderWrapper>\n    );\n};\n","import { useEffect } from 'react';\nimport { RiContactsFill, RiUserAddFill } from 'react-icons/ri';\nimport Section from './components/Section/Section';\nimport Container from './components/Container/Container';\nimport PhoneBookForm from './components/PhoneBookForm/PhoneBookForm';\nimport PhoneBookList from './components/PhoneBookList/PhoneBooklist';\nimport Filter from './components/Filter/Filter';\nimport { Loader } from './components/Loader/Loader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from './redux/contacts';\nimport { ContainerContacts, ContainerAdd } from './components/Container/Container.styles';\n\nconst App = () => {\n    const contacts = useSelector(contactsSelectors.getContacts);\n    const isLoading = useSelector(contactsSelectors.getIsLoading);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(contactsOperations.fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            <Section title=\"Phone Book\">\n                <Container>\n                    <ContainerAdd>\n                        <h1>\n                            <RiUserAddFill /> Add Contact\n                        </h1>\n                        <PhoneBookForm />\n                    </ContainerAdd>\n\n                    <ContainerContacts>\n                        <h2>\n                            <RiContactsFill />\n                            Contacts\n                        </h2>\n                        <Filter />\n                        {contacts.length > 0 && <PhoneBookList />}\n                    </ContainerContacts>\n                </Container>\n            </Section>\n            <Loader loading={isLoading} />\n        </>\n    );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from '../redux/contacts/contactsSlice';\n\nconst store = configureStore({\n    reducer: {\n        contacts: contactsReducer,\n    },\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}